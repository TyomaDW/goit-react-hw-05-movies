{"version":3,"file":"static/js/105.1b024db7.chunk.js","mappings":"6RAMMA,EAAkBC,EAAAA,GAAAA,IAAH,6GAOfC,EAAiBD,EAAAA,GAAAA,GAAH,+CAIL,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACUC,EAAAA,EAAAA,MADV,gBACRC,EADQ,EACRA,QACRJ,EAAUI,GAFM,2CAAH,qDAIfF,MACC,KAGD,UAACR,EAAD,YACE,SAACE,EAAD,6BACCG,EAAOM,OAAS,IACf,wBACGN,EAAOO,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAxB,SAA+BC,KADxBD,a,0MCjCjBG,EAAW,+BACXC,EAAU,mCAEVC,EAAkB,uDAEXT,EAAW,mCAAG,6FACnBU,EADmB,UACVH,EADU,uCAC6BC,GAD7B,SAEFG,IAAAA,IAAUD,GAFR,cAEnBE,EAFmB,yBAGlBA,EAASC,MAHS,2CAAH,qDAMXC,EAAW,mCAAG,WAAMC,GAAN,gFACnBL,EADmB,UACVH,EADU,iCACuBC,EADvB,kBACwCO,EADxC,wCAEJJ,IAAAA,IAAUD,GAFN,cAEnBM,EAFmB,yBAGlBA,EAAOH,KAAKZ,SAHM,2CAAH,sDAMXgB,EAAY,mCAAG,WAAMb,GAAN,oFACpBM,EADoB,UACXH,EADW,kBACOH,EADP,oBACqBI,GADrB,SAEHG,IAAAA,IAAUD,GAFP,uBAElBG,EAFkB,EAElBA,MACFG,EAASE,EAASL,IACjBM,OAASH,EAAOG,OAAOhB,KAAI,SAAAiB,GAAK,OAAIA,EAAMC,QAJvB,kBAKnBL,GALmB,2CAAH,sDAQZM,EAAmB,mCAAG,WAAMlB,GAAN,kFAC3BM,EAD2B,UAClBH,EADkB,kBACAH,EADA,4BACsBI,GADtB,SAIvBG,IAAAA,IAAUD,GAJa,uBAGvBa,EAHuB,EAG/BV,KAAQU,KAHuB,kBAK1BA,EAAKpB,IAAIqB,IALiB,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMrB,GAAN,oFAC3BM,EAD2B,UAClBH,EADkB,kBACAH,EADA,4BACsBI,GADtB,SAIvBG,IAAAA,IAAUD,GAJa,uBAGvBT,EAHuB,EAG/BY,KAAQZ,QAEJyB,EAAUzB,EAAQE,KAAI,YAC1B,MAAO,CAAEwB,OAD0C,EAAtBA,OACZC,QADkC,EAAdA,YALN,kBAQ1BF,GAR0B,2CAAH,sDAW1BR,EAAW,SAAAW,GACf,IAAIb,EAASc,OAAOC,OAAO,GAAIF,GAQ/B,OAPIb,EAAOgB,YACThB,EAAOgB,YAAc,kCAAoChB,EAAOgB,YAC7DhB,EAAOgB,YAAcvB,EAC1BO,EAAOiB,aAAgBjB,EAAOkB,aAE1BlB,EAAOkB,aAAaC,MAAM,EAAG,GAD7B,UAEJnB,EAAOoB,aAAP,UAA+C,GAAtBpB,EAAOoB,aAAhC,KACOpB,GAGHQ,EAAU,SAAC,GAAgD,IAA9Ca,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,aAC1BC,EAAW,CAAElB,KAAMgB,EAAeG,UADsB,EAAhBA,WAK9C,OAHAD,EAASE,KAAOH,EACZ,kCAAoCA,EACpC7B,EACG8B","sources":["components/HomePage/HomePage.jsx","services/apiService.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { getTrending } from '../../services/apiService';\n\nconst TrendingSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 300px;\n`;\n\nconst TrendingHeader = styled.h1`\n  align-self: center;\n`;\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const { results } = await getTrending();\n      setMovies(results);\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <TrendingSection>\n      <TrendingHeader>Trending today</TrendingHeader>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <NavLink to={`/movies/${id}`}>{title}</NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </TrendingSection>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'aa799e6d0297de166f5b00a47e312b46';\n\nconst IMG_PLACEHOLDER = 'https://critics.io/img/movies/poster-placeholder.png';\n\nexport const getTrending = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`;\n  const result = await axios.get(url);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  const result = fixMovie(data);\n  result.genres = result.genres.map(genre => genre.name);\n  return result;\n};\n\nexport const getMovieCreditsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  const {\n    data: { cast },\n  } = await axios.get(url);\n  return cast.map(fixCast);\n};\n\nexport const getMovieReviewsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  const {\n    data: { results },\n  } = await axios.get(url);\n  const reviews = results.map(({ author, content }) => {\n    return { author, content };\n  });\n  return reviews;\n};\n\nconst fixMovie = movie => {\n  let result = Object.assign({}, movie);\n  if (result.poster_path)\n    result.poster_path = 'https://image.tmdb.org/t/p/w500' + result.poster_path;\n  else result.poster_path = IMG_PLACEHOLDER;\n  result.release_year = !result.release_date\n    ? 'Unknown'\n    : result.release_date.slice(0, 4);\n  result.vote_average = `${result.vote_average * 10}%`;\n  return result;\n};\n\nconst fixCast = ({ original_name, profile_path, character }) => {\n  const newActor = { name: original_name, character };\n  newActor.path = profile_path\n    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n    : IMG_PLACEHOLDER;\n  return newActor;\n};\n"],"names":["TrendingSection","styled","TrendingHeader","HomePage","useState","movies","setMovies","useEffect","getMovies","getTrending","results","length","map","id","title","to","BASE_URL","API_KEY","IMG_PLACEHOLDER","url","axios","response","data","searchMovie","query","result","getMovieById","fixMovie","genres","genre","name","getMovieCreditsById","cast","fixCast","getMovieReviewsById","reviews","author","content","movie","Object","assign","poster_path","release_year","release_date","slice","vote_average","original_name","profile_path","newActor","character","path"],"sourceRoot":""}