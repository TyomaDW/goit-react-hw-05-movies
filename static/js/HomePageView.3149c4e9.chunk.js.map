{"version":3,"file":"static/js/HomePageView.3149c4e9.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,aAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,EADf,MAKxB,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0Ba,EAD1B,+CAKxB,SAASC,EAAmBC,GACjC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACQf,EADR,qBAKxB,SAASgB,EAAmBD,GACjC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,oBAKxB,SAASiB,EAAmBF,GACjC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,uB,kHC/BhB,SAASkB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA0BC,MAAK,SAAAC,GAAO,OAAIJ,EAAUI,EAAQC,cAC3D,KAGD,8BACGN,IACC,wBACGA,EAAOO,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMb,IAA3B,SAAkCa,EAAME,SADjCF,EAAMb","sources":["services/moviesApi.js","views/HomePageView.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'aa799e6d0297de166f5b00a47e312b46';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('No found'));\n}\n\nexport function fetchTreading() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY} `\n  );\n}\n\nexport function fetchSearchMovies(name) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMoviesDetails(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US `\n  );\n}\n\nexport function fetchMoviesCredits(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMoviesReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US `\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as moviesApi from '../services/moviesApi';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    moviesApi.fetchTreading().then(request => setMovies(request.results));\n  }, []);\n\n  return (\n    <>\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTreading","fetchSearchMovies","name","fetchMoviesDetails","id","fetchMoviesCredits","fetchMoviesReviews","HomePage","useState","movies","setMovies","useEffect","moviesApi","then","request","results","map","movie","to","title"],"sourceRoot":""}