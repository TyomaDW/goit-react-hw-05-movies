{"version":3,"file":"static/js/Reviews.c0aaa29a.chunk.js","mappings":"2NAMe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBL,GAASM,MAAK,SAACC,GAAD,OAAUJ,EAAWI,EAAKC,cAC1D,CAACR,KAEF,8BACGE,EAAQO,OAAS,GAChB,0BACE,wBACGP,EAAQQ,KAAI,SAACC,EAAMC,GAClB,OACE,2BACE,uBAAID,EAAKE,UACT,6BAAKF,EAAKG,aAFHF,WASjB","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n\nimport { useState, useEffect } from \"react\";\n\nimport { fetchMoviesReviews } from \"../../services/moviesApi\";\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then((data) => setReviews(data.results));\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <div>\n          <ul>\n            {reviews.map((item, index) => {\n              return (\n                <li key={index}>\n                  <p>{item.author}</p>\n                  <p> {item.content}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      ) : (\n        <p>No reviews to show</p>\n      )}\n    </>\n  );\n}\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","fetchMoviesReviews","then","data","results","length","map","item","index","author","content"],"sourceRoot":""}