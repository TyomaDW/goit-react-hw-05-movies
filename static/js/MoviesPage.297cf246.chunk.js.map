{"version":3,"file":"static/js/MoviesPage.297cf246.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAE5B,IAAMC,EAAQ,mCAAG,+GAEGF,IAAAA,IAAU,uBAFb,uBAEZG,EAFY,EAEZA,KAFY,kBAGbA,EAAKC,SAHQ,gCAKpBC,QAAQC,MAAR,MALoB,yDAAH,qDAQRC,EAAM,mCAAG,WAAMC,GAAN,kGAEKR,IAAAA,IAAA,+BAAkCQ,EAAlC,YAFL,uBAEVL,EAFU,EAEVA,KAFU,kBAGXA,EAAKC,SAHM,gCAKlBC,QAAQC,MAAR,MALkB,yDAAH,sDAQNG,EAAS,mCAAG,WAAMC,GAAN,kGAEEV,IAAAA,IAAA,iBAAoBU,IAFtB,uBAEbP,EAFa,EAEbA,KAFa,kBAGdA,GAHc,gCAKrBE,QAAQC,MAAR,MALqB,yDAAH,sDAQTK,EAAO,mCAAG,WAAMD,GAAN,kGAEIV,IAAAA,IAAA,iBAAoBU,EAApB,aAFJ,uBAEXP,EAFW,EAEXA,KAFW,kBAGZA,EAAKS,MAHO,gCAKnBP,QAAQC,MAAR,MALmB,yDAAH,sDAQPO,EAAO,mCAAG,WAAMH,GAAN,kGAEIV,IAAAA,IAAA,iBAAoBU,EAApB,aAFJ,uBAEXP,EAFW,EAEXA,KAFW,kBAGZA,EAAKC,SAHO,gCAKnBC,QAAQC,MAAR,MALmB,yDAAH,uD,qJCpCpB,K,SCOe,SAASQ,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcQ,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACR,GAAKX,EAAL,CAGA,IAAMY,EAAS,mCAAG,8GAEKb,EAAAA,EAAAA,IAAOC,GAFZ,OAERL,EAFQ,OAGde,EAAUf,GAHI,gDAKdE,QAAQC,MAAR,MALc,yDAAH,qDAQfc,OACC,CAACZ,IAWJ,OACE,gCACE,0BACE,kBAAMa,UAAWC,EAAAA,KAAQC,SAXhB,SAAAC,GACbA,EAAMC,iBACe,KAAjBjB,EAAMkB,OAIVV,EAAS,IAHPX,QAAQC,MAAM,sBAQZ,WACE,kBACEe,UAAWC,EAAAA,MACXK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,aACZC,SApBW,SAAAP,GAAK,OACxBR,EAASQ,EAAMQ,cAAcC,MAAMC,mBAqB7B,mBAAQP,KAAK,SAASN,UAAWC,EAAAA,OAAjC,0BAKJ,0BACE,wBACGL,EAAOkB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKC,EAAAA,EAAAA,WAAL,YAA0BF,EAAMG,GAAhC,mBAA6C/B,GAArD,SACG4B,EAAMI,SAFFJ,EAAMG","sources":["Api/api.js","components/MoviesPage/MoviesPage.module.css","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: 'aa799e6d0297de166f5b00a47e312b46' };\n\nexport const Trending = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport const Search = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie?&query=${query}&page=1`);\n    return data.results;\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport const MovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport const Credits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data.cast;\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport const Reviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data.results;\n  } catch (e) {\n    console.error(e);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Search } from '../../Api/api';\nimport { ROUTES } from '../../routes';\n\nimport s from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const apiSearch = async () => {\n      try {\n        const data = await Search(query);\n        setMovies(data);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    apiSearch();\n  }, [query]);\n  const searchChange = event =>\n    setQuery(event.currentTarget.value.toLowerCase());\n  const submit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      console.error('Enter your query!');\n      return;\n    }\n    setQuery('');\n  };\n  return (\n    <section>\n      <div>\n        <form className={s.form} onSubmit={submit}>\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search ...\"\n            onChange={searchChange}\n          />\n          <button type=\"submit\" className={s.button}>\n            Search\n          </button>\n        </form>\n      </div>\n      <div>\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${ROUTES.MoviesPage}/${movie.id}/search/${query}`}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n}\nMoviesPage.propTypes = {\n  onSubmit: PropTypes.func,\n};\n"],"names":["axios","api_key","Trending","data","results","console","error","Search","query","MovieById","movieId","Credits","cast","Reviews","MoviesPage","useState","setQuery","movies","setMovies","useEffect","apiSearch","className","s","onSubmit","event","preventDefault","trim","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","map","movie","to","ROUTES","id","title"],"sourceRoot":""}