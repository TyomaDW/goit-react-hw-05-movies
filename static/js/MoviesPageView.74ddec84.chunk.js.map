{"version":3,"file":"static/js/MoviesPageView.74ddec84.chunk.js","mappings":"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","sources":["services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.js","views/MoviesPageView.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'aa799e6d0297de166f5b00a47e312b46';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('No found'));\n}\n\nexport function fetchTreading() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY} `\n  );\n}\n\nexport function fetchSearchMovies(name) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMoviesDetails(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US `\n  );\n}\n\nexport function fetchMoviesCredits(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMoviesReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US `\n  );\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"SearchMovies\":\"SearchMovies_SearchMovies__Z17A3\",\"SearchForm\":\"SearchMovies_SearchForm__+8CwD\",\"SearchFormButton\":\"SearchMovies_SearchFormButton__wNM+d\",\"SearchFormInput\":\"SearchMovies_SearchFormInput__2882I\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../SearchMovies/SearchMovies.module.css';\n\nexport default function SearchMovies({ onSubmit }) {\n  const [searchName, setSearchName] = useState('');\n\n  const handleNameChange = event => {\n    setSearchName(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchName.trim() === '') {\n      alert('Введите название искомого фильма');\n      return;\n    }\n    onSubmit(searchName);\n    setSearchName('');\n  };\n\n  return (\n    <header className={s.SearchMovies}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <input\n          className={s.SearchFormInput}\n          name=\"searchName\"\n          value={searchName}\n          onChange={handleNameChange}\n          type=\"text\"\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\" className={s.SearchFormButton}></button>\n      </form>\n    </header>\n  );\n}\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport SearchMovies from '../components/SearchMovies/SearchMovies';\n\nimport * as moviesApi from '../services/moviesApi';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  const { url } = useRouteMatch();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchName = new URLSearchParams(location.search).get('query');\n\n  const onChangeSearch = queryString => {\n    history.push({ ...location, search: `query=${queryString}` });\n  };\n\n  useEffect(() => {\n    if (searchName === '') {\n      return;\n    }\n\n    moviesApi\n      .fetchSearchMovies(searchName)\n      .then(request => setMovies(request.results));\n  }, [searchName]);\n\n  return (\n    <>\n      <SearchMovies onSubmit={onChangeSearch} />\n\n      {searchName && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${url}/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTreading","fetchSearchMovies","name","fetchMoviesDetails","id","fetchMoviesCredits","fetchMoviesReviews","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SearchMovies","onSubmit","useState","searchName","setSearchName","className","s","event","preventDefault","trim","alert","onChange","toLowerCase","type","placeholder","MoviesPage","movies","setMovies","useRouteMatch","history","useHistory","location","useLocation","URLSearchParams","search","get","useEffect","moviesApi","then","request","results","queryString","map","movie","to","title"],"sourceRoot":""}